{"version":3,"file":"assets.js","sources":["../../Our.Umbraco.FullTextSearch.Client/src/actions/entity/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/modals/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/context/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/core/ApiError.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/core/CancelablePromise.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/core/OpenAPI.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/core/request.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/services.gen.ts","../../Our.Umbraco.FullTextSearch.Client/src/index.ts","../../Our.Umbraco.FullTextSearch.Client/src/modals/reindexnode.modaltoken.ts","../../Our.Umbraco.FullTextSearch.Client/src/actions/entity/reindex.action.ts","../../Our.Umbraco.FullTextSearch.Client/src/repository/sources/fulltextsearch.source.ts","../../Our.Umbraco.FullTextSearch.Client/src/context/fulltextsearch.context.ts","../../Our.Umbraco.FullTextSearch.Client/src/modals/reindexnode.element.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/en.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/da.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/cy.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/fr.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/nb.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/nl.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE, UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS, UMB_DOCUMENT_ROOT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\nimport { ManifestEntityAction } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst entityAction: ManifestEntityAction = {\r\n    type: 'entityAction',\r\n    kind: 'default',\r\n    alias: 'our.umbraco.fulltextsearch.reindex.action',\r\n    name: 'ReindexNode',\r\n    weight: -100,\r\n    forEntityTypes: [UMB_DOCUMENT_ROOT_ENTITY_TYPE, UMB_DOCUMENT_ENTITY_TYPE],\r\n    api: () => import('./reindex.action.ts'),\r\n    elementName: 'our-umbraco-fulltext-search-actions-entity-reindexnode',\r\n    meta: {\r\n        icon: 'icon-alarm-clock',\r\n        label: '#fullTextSearch_reindex',\r\n        repositoryAlias: UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS,\r\n    }\r\n}\r\n\r\nexport const manifests = [entityAction];\r\n","import { ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst reIndexNodeModal: ManifestModal = {\r\n    type: 'modal',\r\n    alias: 'our.umbraco.fulltextsearch.modals.reindexnode',\r\n    name: 'Reindex node',\r\n    js: () => import('./reindexnode.element.ts'),\r\n}\r\n\r\nexport const manifests = [reIndexNodeModal];\r\n","import { ManifestLocalization } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst localizations: ManifestLocalization[] = [\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.En\",\r\n        name: \"English\",\r\n        meta: {\r\n            culture: \"en\"\r\n        },\r\n        js: () => import(\"./en.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Da\",\r\n        name: \"Danish\",\r\n        meta: {\r\n            culture: \"da\"\r\n        },\r\n        js: () => import(\"./da.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Cy\",\r\n        name: \"Welsh\",\r\n        meta: {\r\n            culture: \"cy\"\r\n        },\r\n        js: () => import(\"./cy.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Fr\",\r\n        name: \"French\",\r\n        meta: {\r\n            culture: \"fr\"\r\n        },\r\n        js: () => import(\"./fr.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Nb\",\r\n        name: \"Norwegian bokmÃ¥l\",\r\n        meta: {\r\n            culture: \"nb\"\r\n        },\r\n        js: () => import(\"./nb.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Nl\",\r\n        name: \"Dutch\",\r\n        meta: {\r\n            culture: \"nl\"\r\n        },\r\n        js: () => import(\"./nl.ts\")\r\n    }\r\n]\r\n\r\nexport const manifests = localizations;\r\n","import { ManifestGlobalContext } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst contexts: Array<ManifestGlobalContext> = [\r\n    {\r\n        type: 'globalContext',\r\n        alias: 'our.umbraco.fulltextsearch.context',\r\n        name: 'Full Text Search context',\r\n        js: () => import('./fulltextsearch.context.ts')\r\n    }\r\n]\r\n\r\nexport const manifests = [...contexts];","import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>) {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [\n        ...this._fns.slice(0, index),\n        ...this._fns.slice(index + 1),\n      ];\n    }\n  }\n\n  use(fn: Middleware<T>) {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {request: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {request: new Interceptors(),response: new Interceptors(),\n\t},\n};","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\tresolve(options, config.TOKEN),\n\t\tresolve(options, config.USERNAME),\n\t\tresolve(options, config.PASSWORD),\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? responseBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { $OpenApiTs } from './types.gen';\n\nexport class FulltextsearchService {\n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static getUmbracoFulltextsearchApiV5FulltextsearchConfig(): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/config']['get']['res'][200]> {\n        return __request(OpenAPI, {\n    method: 'GET',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/config'\n});\n    }\n    \n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static getUmbracoFulltextsearchApiV5FulltextsearchIncorrectindexednodes(data: $OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/incorrectindexednodes']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/incorrectindexednodes']['get']['res'][200]> {\n        const { pageNumber } = data;\n        return __request(OpenAPI, {\n    method: 'GET',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/incorrectindexednodes',\n    query: {\n        pageNumber\n    }\n});\n    }\n    \n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static getUmbracoFulltextsearchApiV5FulltextsearchIndexednodes(data: $OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/indexednodes']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/indexednodes']['get']['res'][200]> {\n        const { pageNumber } = data;\n        return __request(OpenAPI, {\n    method: 'GET',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/indexednodes',\n    query: {\n        pageNumber\n    }\n});\n    }\n    \n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static getUmbracoFulltextsearchApiV5FulltextsearchIndexstatus(): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/indexstatus']['get']['res'][200]> {\n        return __request(OpenAPI, {\n    method: 'GET',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/indexstatus'\n});\n    }\n    \n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static getUmbracoFulltextsearchApiV5FulltextsearchMissingnodes(data: $OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/missingnodes']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/missingnodes']['get']['res'][200]> {\n        const { pageNumber } = data;\n        return __request(OpenAPI, {\n    method: 'GET',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/missingnodes',\n    query: {\n        pageNumber\n    }\n});\n    }\n    \n    /**\n * @returns unknown OK\n * @throws ApiError\n */\n    public static postUmbracoFulltextsearchApiV5FulltextsearchReindexnodes(data: $OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/reindexnodes']['post']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/fulltextsearch/api/v5/fulltextsearch/reindexnodes']['post']['res'][200]> {\n        const { requestBody } = data;\n        return __request(OpenAPI, {\n    method: 'POST',\n    url: '/umbraco/fulltextsearch/api/v5/fulltextsearch/reindexnodes',\n    body: requestBody,\n    mediaType: 'application/json'\n});\n    }\n    \n}","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { manifests as entityActionManifests } from './actions/entity/manifest.ts';\r\nimport { manifests as modalManifests } from './modals/manifest.ts';\r\nimport { manifests as localizationManifests } from './localization/manifest.ts';\r\nimport { manifests as contextManifests } from './context/manifest.ts';\r\nimport { OpenAPI } from './api/index.ts';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n\r\n    // register them here. \r\n    extensionRegistry.registerMany([\r\n        ...entityActionManifests,\r\n        ...modalManifests,\r\n        ...localizationManifests,\r\n        ...contextManifests\r\n    ]);\r\n\r\n\r\n    _host.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n        const umbOpenApi = _auth.getOpenApiConfiguration();\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    });\r\n\r\n};","import { UmbEntityUnique } from \"@umbraco-cms/backoffice/entity\";\r\nimport { UmbModalToken } from \"@umbraco-cms/backoffice/modal\";\r\n\r\nexport type ReindexNodeModalData = {\r\n    unique: UmbEntityUnique;\r\n}\r\n\r\nexport const REINDEX_NODE_MODAL_TOKEN = new UmbModalToken<ReindexNodeModalData>('our.umbraco.fulltextsearch.modals.reindexnode', {\r\n    modal: {\r\n        type: 'dialog',\r\n        size: 'small'\r\n    }\r\n});","import { UmbControllerHostElement } from \"@umbraco-cms/backoffice/controller-api\";\r\n//import { UmbDocumentItemRepository } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbEntityActionArgs, UmbEntityActionBase } from \"@umbraco-cms/backoffice/entity-action\";\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { REINDEX_NODE_MODAL_TOKEN } from \"../../modals/reindexnode.modaltoken\";\r\n\r\nexport class ReindexNodeAction extends UmbEntityActionBase<never> {\r\n    #modalManagerContext?: typeof UMB_MODAL_MANAGER_CONTEXT.TYPE;\r\n\r\n\r\n    constructor(host: UmbControllerHostElement, args: UmbEntityActionArgs<never>) {\r\n        super(host, args)\r\n\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n            this.#modalManagerContext = instance;\r\n        });\r\n    }\r\n\r\n    async execute() {\r\n        const modalContext = this.#modalManagerContext?.open(this, REINDEX_NODE_MODAL_TOKEN, {\r\n            data: {\r\n                unique: this.args.unique\r\n            }\r\n        });\r\n\r\n        await modalContext?.onSubmit().then(() => {\r\n            console.log(\"ok\")\r\n        }).catch(() => {\r\n            console.log(\"no\")\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport default ReindexNodeAction;","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { FulltextsearchService } from \"../../api\";\r\n\r\nexport class FullTextSearchDataSource {\r\n\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async config() {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.getUmbracoFulltextsearchApiV5FulltextsearchConfig());\r\n    }\r\n\r\n    async indexStatus() {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.getUmbracoFulltextsearchApiV5FulltextsearchIndexstatus());\r\n    }\r\n\r\n    async incorrectIndexedNodes(pageNumber?: number) {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.getUmbracoFulltextsearchApiV5FulltextsearchIncorrectindexednodes({\r\n            pageNumber\r\n        }));\r\n    }\r\n\r\n    async indexedNodes(pageNumber?: number) {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.getUmbracoFulltextsearchApiV5FulltextsearchIndexednodes({\r\n            pageNumber\r\n        }));\r\n    }\r\n\r\n    async missingNodes(pageNumber?: number) {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.getUmbracoFulltextsearchApiV5FulltextsearchMissingnodes({\r\n            pageNumber\r\n        }));\r\n    }\r\n\r\n    async reindex(includeDescendants: boolean, nodeIds?: Array<(number)>) {\r\n        return await tryExecuteAndNotify(this.#host, FulltextsearchService.postUmbracoFulltextsearchApiV5FulltextsearchReindexnodes({\r\n            requestBody: {\r\n                includeDescendants,\r\n                nodeIds\r\n            }\r\n        }));\r\n    }\r\n}","import { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\r\nimport { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { FullTextSearchOptions, IndexedNodeResult, IndexStatus, OpenAPI } from './../api/index.ts';\r\nimport { FullTextSearchDataSource } from \"../repository/sources/fulltextsearch.source.ts\";\r\nimport { UmbObjectState, UmbStringState } from \"@umbraco-cms/backoffice/observable-api\";\r\n\r\n\r\nexport class FullTextSearchContext extends UmbControllerBase {\r\n\r\n    #source: FullTextSearchDataSource;\r\n\r\n    #config = new UmbObjectState<FullTextSearchOptions | undefined>(undefined);\r\n    public readonly config = this.#config.asObservable();\r\n\r\n    #indexStatus = new UmbObjectState<IndexStatus | undefined>(undefined);\r\n    public readonly indexStatus = this.#indexStatus.asObservable();\r\n\r\n    #indexedNodes = new UmbObjectState<IndexedNodeResult | undefined>(undefined);\r\n    public readonly indexedNodes = this.#indexedNodes.asObservable();\r\n\r\n    #incorrectIndexedNodes = new UmbStringState<IndexedNodeResult | undefined>(undefined);\r\n    public readonly incorrectIndexedNodes = this.#incorrectIndexedNodes.asObservable();\r\n\r\n    #missingIndexedNodes = new UmbStringState<IndexedNodeResult | undefined>(undefined);\r\n    public readonly missingIndexedNodes = this.#missingIndexedNodes.asObservable();\r\n\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n        this.provideContext(FULLTEXTSEARCH_CONTEXT_TOKEN, this);\r\n        this.#source = new FullTextSearchDataSource(host);\r\n\r\n        this.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n            const umbOpenApi = _auth.getOpenApiConfiguration();\r\n            OpenAPI.TOKEN = umbOpenApi.token;\r\n            OpenAPI.BASE = umbOpenApi.base;\r\n            OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n        });\r\n    }\r\n\r\n    async getConfig() {\r\n        const { data } = await this.#source.config();\r\n\r\n        if (data) {\r\n            this.#config.setValue(data);\r\n        }\r\n    }\r\n\r\n    async reindex(includeDescendants: boolean, nodeIds?: Array<(number)>) {\r\n        await this.#source.reindex(includeDescendants, nodeIds);\r\n    }\r\n\r\n    async getIndexStatus() {\r\n        const { data } = await this.#source.indexStatus();\r\n\r\n        if (data) {\r\n            this.#indexStatus.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getIndexedNodes(pageNumber?: number) {\r\n        const { data } = await this.#source.indexedNodes(pageNumber);\r\n        if (data) {\r\n            this.#indexedNodes.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getIncorrectIndexedNodes(pageNumber?: number) {\r\n        const { data } = await this.#source.incorrectIndexedNodes(pageNumber);\r\n        if (data) {\r\n            this.#incorrectIndexedNodes.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getMissingNodes(pageNumber?: number) {\r\n        const { data } = await this.#source.missingNodes(pageNumber);\r\n        if (data) {\r\n            this.#missingIndexedNodes.setValue(data);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FullTextSearchContext;\r\nexport const FULLTEXTSEARCH_CONTEXT_TOKEN =\r\n    new UmbContextToken<FullTextSearchContext>(FullTextSearchContext.name);","import { html, LitElement, property, customElement, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport type { UmbModalContext } from \"@umbraco-cms/backoffice/modal\";\r\nimport { UmbModalExtensionElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { ReindexNodeModalData } from \"./reindexnode.modaltoken.ts\";\r\nimport { UUIButtonState } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport FullTextSearchContext, { FULLTEXTSEARCH_CONTEXT_TOKEN } from \"../context/fulltextsearch.context.ts\";\r\n\r\n@customElement('our-umbraco-fulltext-search-reindex-node-modal')\r\nexport default class ReindexNodeDialogElement\r\n    extends UmbElementMixin(LitElement)\r\n    implements UmbModalExtensionElement<ReindexNodeModalData> {\r\n    \r\n    \r\n    #fullTextSearchContext?: FullTextSearchContext;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(FULLTEXTSEARCH_CONTEXT_TOKEN, (fullTextSearchContext) => {\r\n            this.#fullTextSearchContext = fullTextSearchContext;\r\n        })\r\n    }\r\n\r\n    @property({ attribute: false })\r\n    modalContext?: UmbModalContext<ReindexNodeModalData>;\r\n\r\n    @property({ attribute: false })\r\n    data?: ReindexNodeModalData;\r\n\r\n    @state()\r\n    private _withDescendantsState: UUIButtonState;\r\n\r\n    @state()\r\n    private _withoutDescendantsState: UUIButtonState;\r\n\r\n    private _handleCancel() {\r\n        this.modalContext?.submit();\r\n    }\r\n\r\n    private _reindex(includeDescendants: boolean) {\r\n        this._setButtonState(includeDescendants, 'waiting');\r\n\r\n        this.#fullTextSearchContext?.reindex(includeDescendants, [ ]);\r\n\r\n        console.log(\"reindexing\", includeDescendants);\r\n    }\r\n\r\n    private _setButtonState(includeDescendants: boolean, state: UUIButtonState) {\r\n        if (includeDescendants) {\r\n            this._withDescendantsState = state;\r\n        }\r\n        else {\r\n            this._withoutDescendantsState = state;\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <uui-dialog-layout headline=\"${(this.data?.unique ? `#fullTextSearch_reindexNode` : `#fullTextSearch_reindexAllNodes`)}\">\r\n                ${(this.data?.unique\r\n                ? html`\r\n                    <uui-button look=\"primary\" .state=${this._withoutDescendantsState} @click=${() => this._reindex(false)}>\r\n                        <umb-localize key=\"fullTextSearch_reindexJustThisNode\">\r\n                            Reindex just this node\r\n                        </umb-localize></uui-button>\r\n                    <uui-button look=\"secondary\" .state=${this._withDescendantsState} @click=${() => this._reindex(true)}>\r\n                        <umb-localize key=\"fullTextSearch_reindexWithDescendants\">\r\n                            Reindex with descendants\r\n                        </umb-localize>\r\n                    </uui-button>\r\n                ` : html`\r\n                    <uui-button look=\"primary\" .state=${this._withDescendantsState} @click=${() => this._reindex(true)}>\r\n                        <umb-localize key=\"fullTextSearch_reindexAllContent\">\r\n                            Reindex all content\r\n                        </umb-localize></uui-button>\r\n                `)}\r\n                <uui-button @click=${this._handleCancel}>\r\n                    <umb-localize key=\"general_cancel\">\r\n                        Cancel\r\n                    </umb-localize>\r\n                </uui-button>\r\n            </uui-dialog-layout>\r\n        `;\r\n    }\r\n}","export default {\r\n    fullTextSearch: {\r\n        indexStatus: 'Index Status',\r\n        indexableNodes: 'Indexable Nodes',\r\n        indexableNodesDescription: 'The total number of indexable nodes, according to the current Full Text Search config',\r\n        allIndexableNodesAreIndexed: 'All indexable nodes has full text content in index',\r\n        indexedNodes: 'Indexed Nodes',\r\n        indexedNodesDescription: 'The total number of indexed nodes searchable by Full Text Search',\r\n        missingNodes: 'Missing Nodes',\r\n        missingNodesDescription: 'The total number of missing indexed nodes, according to the current Full Text Search config',\r\n        couldntGetMissingNodes: \"Couldn't get missing nodes\",\r\n        nodesAreMissingInIndex: '{0} node(s) are missing full text content in index',\r\n        incorrectIndexedNodes: 'Incorrectly Indexed Nodes',\r\n        incorrectIndexedNodesDescription: 'The total number of indexed nodes that should not be indexed according to the current Full Text Search config',\r\n        couldntGetIncorrectIndexedNodes: \"Couldn't get incorrectly indexed nodes\",\r\n        nodesAreIncorrectlyIndexed: '{0} node(s) are incorrectly indexed with full text content',\r\n        reindexNode: 'Reindex Node',\r\n        reindexNodes: 'Reindex Nodes',\r\n        reindexedNodes: 'Reindexed {0} node(s)',\r\n        reindexing: 'Reindexing...',\r\n        reindex: 'Reindex',\r\n        reindexDescription: 'Select whether or not to reindex all nodes',\r\n        reindexWithDescendants: 'Reindex with descendants',\r\n        includeDescendants: 'Include descendants',\r\n        allNodes: 'All nodes',\r\n        selectNodes: 'Select nodes',\r\n        selectNodesDescription: 'Select the nodes to reindex',\r\n        selectedNodes: 'Selected nodes',\r\n        description: 'Description',\r\n        developedBy: 'Developed by',\r\n        sponsoredBy: 'Sponsored by',\r\n        status: 'Status',\r\n        search: 'Search',\r\n        enterKeywordsHere: 'Enter keywords here',\r\n        advancedSettings: 'Advanced settings',\r\n        inspect: 'Inspect',\r\n        searchType: 'Search type',\r\n        searchTypeDescription: 'The type of search to perform.',\r\n        titleProperties: 'Title properties',\r\n        titlePropertiesDescription: 'Adds field names to use for title properties. Note, that this overrides the config setting, so you need to add all wanted fields for titles here.',\r\n        titleBoost: 'Title boost',\r\n        titleBoostDescription: 'Set the boosting value for the title properties, to make titles more important than body text when searching.',\r\n        bodyProperties: 'Body properties',\r\n        bodyPropertiesDescription: 'Adds field names to use for body properties. Note, that this overrides the config setting, so you need to add all wanted fields for bodytext here.',\r\n        summaryProperties: 'Summary properties',\r\n        summaryPropertiesDescription: \"Adds field names to use for summary properties. Note, that if you don't specify any summary properties, the body properties will be used instead.\",\r\n        summaryLength: 'Summary length',\r\n        summaryLengthDescription: 'Sets the summary length in the results. The default is 300 characters.',\r\n        rootNodes: 'Root nodes',\r\n        rootNodesDescription: 'With this setting, you can limit search results to be descendants of the selected nodes.',\r\n        culture: 'Culture',\r\n        cultureDescription: 'This is used to define which culture to search in. You should probably always set this, but it might work without it, in invariant sites.',\r\n        enableWildcards: 'Enable wildcards',\r\n        enableWildcardsDescription: 'This enables or disables use of wildcards in the search terms. Wildcard characters are added automatically to each of the terms.',\r\n        fuzzyness: 'Fuzzyness',\r\n        fuzzynessDescription: 'Fuzzyness is used to match your search term with similar words. This method sets the fuzzyness parameter of the search. The default is 0.8. If wildcards is enabled, fuzzyness will not be used.',\r\n        allowedContentTypes: 'Allowed Content Types',\r\n        allowedContentTypesDescription: 'Limit the search to nodes of the specified Content Type Aliases.',\r\n        fullTextSearchIsDisabled: 'FullTextSearch is disabled',\r\n        fullTextSearchIsEnabled: 'FullTextSearch is enabled',\r\n        externalIndexNotFound: 'ExternalIndex not found',\r\n        enabled: 'Enabled',\r\n        defaultTitleField: 'Default Title field',\r\n        indexingActiveKey: '\"Indexing Active\" key',\r\n        disallowedContentTypeAliases: 'Disallowed Content Type aliases',\r\n        disallowedPropertyAliases: 'Disallowed property aliases',\r\n        xPathsToRemove: 'XPaths to remove from content',\r\n        fullTextContentField: 'Full Text Content field',\r\n        fullTextPathField: 'Full Text Path field'\r\n    }\r\n};\r\n","export default {\r\n    fullTextSearch: {\r\n        indexStatus: 'Index Status',\r\n        indexableNodes: 'Indekserbare noder',\r\n        indexableNodesDescription: 'Antal noder der kan indekseres, ifÃ¸lge den nuvÃ¦rende konfiguration',\r\n        allIndexableNodesAreIndexed: 'Alle indekserbare noder har full text indhold i indekset',\r\n        indexedNodes: 'Indekserede noder',\r\n        indexedNodesDescription: 'Antal noder der kan sÃ¸ges frem med Full Text Search',\r\n        missingNodes: 'Manglende noder',\r\n        missingNodesDescription: 'Antal noder der mangler full text indhold i indekset',\r\n        couldntGetMissingNodes: 'Kunne ikke hente manglende noder',\r\n        nodesAreMissingInIndex: '{0} node(r) mangler full text indhold i indekset',\r\n        incorrectIndexedNodes: 'Fejlagtigt indekserede noder',\r\n        incorrectIndexedNodesDescription: 'Antal noder der ikke burde vÃ¦re indekseret, ifÃ¸lge den nuvÃ¦rende konfiguration',\r\n        couldntGetIncorrectIndexedNodes: 'Kunne ikke hente fejlagtigt indekserede noder',\r\n        nodesAreIncorrectlyIndexed: '{0} node(r) er fejlagtigt indekseret med full text indhold',\r\n        reindexNodes: 'ReindeksÃ©r noder',\r\n        reindexedNodes: 'Reindekserede {0} node(r)',\r\n        reindexing: 'Reindekserer...',\r\n        reindex: 'ReindeksÃ©r',\r\n        reindexDescription: 'VÃ¦lg om alle noder skal reindekseres',\r\n        reindexWithDescendants: 'ReindeksÃ©r med undernoder',\r\n        includeDescendants: 'InkludÃ©r undernoder',\r\n        allNodes: 'Alle noder',\r\n        selectNodes: 'VÃ¦lg noder',\r\n        selectNodesDescription: 'VÃ¦lg noder at reindeksere',\r\n        selectedNodes: 'Valgte noder',\r\n        description: 'Beskrivelse',\r\n        developedBy: 'Udviklet af',\r\n        sponsoredBy: 'Sponsoreret af',\r\n        status: 'Status',\r\n        search: 'SÃ¸g',\r\n        enterKeywordsHere: 'Indtast sÃ¸geord her',\r\n        advancedSettings: 'Avancerede indstillinger',\r\n        inspect: 'InspicÃ©r',\r\n        searchType: 'SÃ¸gningstype',\r\n        searchTypeDescription: 'Hvilken slags sÃ¸gning skal der foretages',\r\n        titleProperties: 'Titelfelter',\r\n        titlePropertiesDescription: 'VÃ¦lg felter der skal bruges til titlen for sÃ¸geresultatet. BemÃ¦rk, dette overskriver standardkonfigurationen, vÃ¦lg derfor alle Ã¸nskede felter her.',\r\n        titleBoost: 'Titelboost',\r\n        titleBoostDescription: 'SÃ¦t boost vÃ¦rdien for titelfelterne, sÃ¥ titler vÃ¦gter hÃ¸jere end indhold i sÃ¸gningen.',\r\n        bodyProperties: 'Indholdsfelter',\r\n        bodyPropertiesDescription: 'VÃ¦lg felter der skal bruges til indholdet for sÃ¸geresultatet. BemÃ¦rk, dette overskriver standardkonfigurationen, vÃ¦lg derfor alle Ã¸nskede felter her.',\r\n        summaryProperties: 'Beskrivelsesfelter',\r\n        summaryPropertiesDescription: 'VÃ¦lg felter der skal bruges til beskrivelsen af sÃ¸geresultatet. BemÃ¦rk, dette overskriver standardkonfigurationen, vÃ¦lg derfor alle Ã¸nskede felter her.',\r\n        summaryLength: 'BeskrivelseslÃ¦ngde',\r\n        summaryLengthDescription: 'Angiv beskrivelseslÃ¦ngden for sÃ¸geresultaterne. Standardindstillingen er 300 tegn.',\r\n        rootNodes: 'Rodnoder',\r\n        rootNodesDescription: 'Med denne indstilling, kan du begrÃ¦nse sÃ¸geresultaterne, til at vÃ¦re undernoder til den/de valgte noder.',\r\n        culture: 'Sprog',\r\n        cultureDescription: 'VÃ¦lg hvilket sprog der skal sÃ¸ges pÃ¥. Du bÃ¸r altid vÃ¦lge dette, men sÃ¸gningen virker muligvis uden sprog, hvis dit site ikke er sprogvarieret.',\r\n        enableWildcards: 'Aktiver wildcards',\r\n        enableWildcardsDescription: 'Dette aktiverer wildcards i sÃ¸gningen, wildcard tegnet tilfÃ¸jes automatisk til hver sÃ¸geterm.',\r\n        fuzzyness: 'Fuzzyness',\r\n        fuzzynessDescription: 'Fuzzyness bruges til at matche en sÃ¸geterm med lignende termer. Standardindstillingen er 0.8. Hvis wildcards er aktiveret, vil fuzzyness ikke blive brugt.',\r\n        allowedContentTypes: 'Tilladte dokumenttyper',\r\n        allowedContentTypesDescription: 'BegrÃ¦nser sÃ¸gningen til indhold af de valgte dokumenttypealiaser.',\r\n        externalIndexNotFound: 'ExternalIndex blev ikke fundet',\r\n        fullTextSearchIsDisabled: 'FullTextSearch er deaktiveret',\r\n        fullTextSearchIsEnabled: 'FullTextSearch is aktiveret',\r\n        enabled: 'Aktiveret',\r\n        defaultTitleField: 'Standard titel felt',\r\n        indexingActiveKey: '\"Aktiv indeksering\" nÃ¸gle',\r\n        disallowedContentTypeAliases: 'Udelukkede dokumenttype aliaser',\r\n        disallowedPropertyAliases: 'Udelukkede egenskabsaliaser',\r\n        xPathsToRemove: 'Fjern XPaths fra indhold',\r\n        fullTextContentField: 'Full Text indholdsfelt',\r\n        fullTextPathField: 'Full Text sti felt'\r\n    }\r\n};\r\n","export default {\r\n    fullTextSearch: {\r\n        indexStatus: 'Statws Mynegai',\r\n        indexableNodes: 'Nodau Mynegeiddadwy',\r\n        indexableNodesDescription: 'Cyfanswm y nodau y gellir eu mynegeio, yn Ã´l y ffurfweddiad Full Text Search presennol',\r\n        allIndexableNodesAreIndexed: 'Mae gan bob nod a ellir ei mynegeio gynnwys testun llawn yn yr mynegai',\r\n        indexedNodes: 'Nodau Mynegeiedig',\r\n        indexedNodesDescription: 'Cyfanswm y nodau mynegeiedig y gellir eu chwilio gyda Full Text Search',\r\n        missingNodes: 'Nodau ar Goll',\r\n        missingNodesDescription: 'Cyfanswm y nodau mynegeiedig sydd ar goll, yn Ã´l y ffurfweddiad Full Text Search presennol',\r\n        couldntGetMissingNodes: 'Methwyd Ã¢ chael nodau coll',\r\n        nodesAreMissingInIndex: 'Mae {0} nod(au) yn methu eu cynnwys testun llawn yn yr mynegai',\r\n        incorrectIndexedNodes: 'Nodau sydd wedi\\'u Mynegeio yn Anghywir',\r\n        incorrectIndexedNodesDescription: 'Cyfanswm y nodau mynegeiedig na ddylai fod wedi\\'u mynegeio yn Ã´l y ffurfweddiad Full Text Search presennol',\r\n        couldntGetIncorrectIndexedNodes: 'Methu Ã¢ chael nodau wedi\\'u mynegeio\\' yn anghywir',\r\n        nodesAreIncorrectlyIndexed: 'Mae {0} nod(au) wedi\\'u mynegeio\\'n anghywir gyda chynnwys testun llawn',\r\n        reindexNodes: 'Ail-fynegi Nodau',\r\n        reindexedNodes: 'Mae {0} nod(au) wedi\\'u hail-fynegeio',\r\n        reindexing: 'Ail-fynegio...',\r\n        reindex: 'Ail-fynegi',\r\n        reindexDescription: 'Dewiswch a ydych am ail-fynegi pob nod ai peidio',\r\n        reindexWithDescendants: 'Ail-fynegi gyda disgynyddion',\r\n        includeDescendants: 'Cynnwys disgynyddion',\r\n        allNodes: 'Pob nod',\r\n        selectNodes: 'Dewis nodau',\r\n        selectNodesDescription: 'Dewiswch y nodau i\\'w hail-fynegi',\r\n        selectedNodes: 'Nodau a ddewiswyd',\r\n        description: 'Disgrifiad',\r\n        developedBy: 'Datblygwyd gan',\r\n        sponsoredBy: 'Noddwyd gan',\r\n        status: 'Statws',\r\n        search: 'Chwilio',\r\n        enterKeywordsHere: 'Rhowch eiriau allweddol yma',\r\n        advancedSettings: 'Gosodiadau Uwch',\r\n        inspect: 'Archwilio',\r\n        searchType: 'Math o chwiliad',\r\n        searchTypeDescription: 'Y math o chwiliad i\\'w wneud.',\r\n        titleProperties: 'Priodweddau teitl',\r\n        titlePropertiesDescription: 'Ychwanegwch enwau maes i\\'w defnyddio ar gyfer priodweddau teitl. Sylwer, fod hyn yn diystyru\\'r gosodiad ffurfweddiad, felly bydd angen ychwanegu pob maes rydych am eu defnyddio ar gyfer teitlau yma.',\r\n        titleBoost: 'Hyby teitl',\r\n        titleBoostDescription: 'Gosodwch y gwerth hyby ar gyfer y priodweddau teitl, i wneud teitlau\\'n bwysicach na thestun y corff wrth chwilio.',\r\n        bodyProperties: 'Priodweddau\\'r corff',\r\n        bodyPropertiesDescription: 'Ychwanegwch enwau maes i\\'w defnyddio ar gyfer priodweddau\\'r corff. Sylwer, fod hyn yn diystyru\\'r gosodiad ffurfweddiad, felly bydd angen ychwanegu pob maes rydych am eu defnyddio ar gyfer testun y corff yma.',\r\n        summaryProperties: 'Priodoleddau Crynodeb',\r\n        summaryPropertiesDescription: 'Ychwanegwch enwau maes i\\'w defnyddio ar gyfer priodweddau crynodeb. Sylwer, os nad ydych yn nodi unrhyw briodweddau crynodeb, bydd y priodweddau corff yn cael eu defnyddio yn lle.',\r\n        summaryLength: 'Hyd y Crynodeb',\r\n        summaryLengthDescription: 'Gosodwch hyd y crynodeb yn y canlyniadau. Y diofyn yw 300 o gymeriadau.',\r\n        rootNodes: 'Nodau gwraidd',\r\n        rootNodesDescription: 'Gyda\\'r gosodiad hwn, gallwch gyfyngu\\'r canlyniadau chwilio i fod yn ddisgynyddion y nodau a ddewiswyd.',\r\n        culture: 'Diwylliant',\r\n        cultureDescription: 'Defnyddir hwn i ddiffinio pa ddiwylliant i chwilio ynddo. Mae\\'n debyg y dylech osod hwn bob amser, ond gallai weithio hebddo, mewn safleoedd un iaith.',\r\n        enableWildcards: 'Galluogi cardiau gwyllt',\r\n        enableWildcardsDescription: 'Mae hyn yn galluogi neu\\'n analluogi defnydd o gardiau gwyllt yn y termau chwilio. Mae nodau cerdyn gwyllt yn cael eu hychwanegu\\'n awtomatig at bob un o\\'r termau.',\r\n        fuzzyness: 'Aneglurder',\r\n        fuzzynessDescription: 'Defnyddir aneglurder i gyfateb eich term chwilio gyda geiriau tebyg. Mae\\'r dull hwn yn gosod y paramedr aneglurder y chwiliad. Y rhagosodiad yw 0.8. Os yw cardiau gwyllt yn cael eu galluogi, ni ddefnyddir aneglurder.',\r\n        allowedContentTypes: 'Mathau o Gynnwys a ganiateir',\r\n        allowedContentTypesDescription: 'Cyfyngu\\'r chwiliad i nodau efo enwau arall fathau o gynnwys penodedig.',\r\n        fullTextSearchIsDisabled: 'Mae FullTextSearch wedi\\'i analluogi',\r\n        fullTextSearchIsEnabled: 'Mae FullTextSearch wedi\\'i alluogi',\r\n        externalIndexNotFound: 'Heb ddod o hyd i ExternalIndex',\r\n        enabled: 'Wedi\\'i alluogi',\r\n        defaultTitleField: 'Maes Teitl diofyn',\r\n        indexingActiveKey: 'Allwedd \"Indexing Active\"',\r\n        disallowedContentTypeAliases: 'Enwau arall y mathau o gynnwys na caniateir',\r\n        disallowedPropertyAliases: 'Enwau arall y Eiddo na caniateir',\r\n        xPathsToRemove: 'Llwybrau XPath i\\'w tynnu o\\'r cynnwys',\r\n        fullTextContentField: 'Maes Cynnwys Testun Llawn',\r\n        fullTextPathField: 'Maes Llwybr Testun Llawn'\r\n    }\r\n};\r\n","export default {\r\n    fullTextSearch: {\r\n        indexStatus: \"Statut de l'Index\",\r\n        indexableNodes: \"Noeuds Indexables\",\r\n        indexableNodesDescription: \"Le nombre total de noeuds indexables, selon la configuration actuelle du Full Text Search\",\r\n        allIndexableNodesAreIndexed: \"Tous les noeuds indexables ont leur contenu intÃ©gral dans l'index\",\r\n        indexedNodes: \"Noeuds IndexÃ©s\",\r\n        indexedNodesDescription: \"Le nombre total de noeuds indexÃ©s qui peuvent Ãªtre cherchÃ©s par le Full Text Search\",\r\n        missingNodes: \"Noeuds manquant\",\r\n        missingNodesDescription: \"Le nombre total de noeuds indexÃ©s manquant, selon la configuration actuelle du Full Text Search\",\r\n        couldntGetMissingNodes: \"Impossible de rÃ©cupÃ©rer les noeuds manquant\",\r\n        nodesAreMissingInIndex: \"{0} noeud(s) n'ont pas leur contenu intÃ©gral dans l'index\",\r\n        incorrectIndexedNodes: \"Noeuds IndexÃ©s Incorrectement\",\r\n        incorrectIndexedNodesDescription: \"Le nombre total de noeuds indexÃ©s qui ne devraient pas l'Ãªtre selon la configuration actuelle du Full Text Search\",\r\n        couldntGetIncorrectIndexedNodes: \"Impossible de rÃ©cupÃ©rer les noeuds indexÃ©s incorrectement\",\r\n        nodesAreIncorrectlyIndexed: \"{0} noeud(s) sont incorrectement indexÃ©s avec leur contenu intÃ©gral\",\r\n        reindexNodes: \"Indexer Ã  nouveau les noeuds\",\r\n        reindexedNodes: \"{0} noeud(s) ont Ã©tÃ© indexÃ©s Ã  nouveau\",\r\n        reindexing: \"Nouvelle indexation en cours...\",\r\n        reindex: \"Indexer Ã  nouveau\",\r\n        reindexDescription: \"Choisissez s'il faut ou pas indexer Ã  nouveau tous les noeuds\",\r\n        reindexWithDescendants: \"Indexer Ã  nouveau, y compris les descendants\",\r\n        includeDescendants: \"Inclure les descendants\",\r\n        allNodes: \"Tous les noeuds\",\r\n        selectNodes: \"SÃ©lectionner les noeuds\",\r\n        selectNodesDescription: \"SÃ©lectionner les noeuds Ã  indexer Ã  nouveau\",\r\n        selectedNodes: \"Noeuds sÃ©lectionnÃ©s\",\r\n        description: \"Description\",\r\n        developedBy: \"DeveloppÃ© par\",\r\n        sponsoredBy: \"SponsorisÃ© par\",\r\n        status: \"Statut\",\r\n        search: \"Chercher\",\r\n        enterKeywordsHere: \"Introduire les mots-clÃ©s ici\",\r\n        advancedSettings: \"RÃ©glages avancÃ©s\",\r\n        inspect: \"Inspecter\",\r\n        searchType: \"Type de recherche\",\r\n        searchTypeDescription: \"Le type de recherche Ã  exÃ©cuter.\",\r\n        titleProperties: \"PropriÃ©tÃ©s pour le Titre\",\r\n        titlePropertiesDescription: \"Ajouter le nom des champs Ã  utiliser pour les propriÃ©tÃ© du titre. Notez que ceci remplace le paramÃ¨tre de configuration, vous devez donc ajouter ici tous les champs souhaitÃ©s pour le titre.\",\r\n        titleBoost: \"Mise en avant du titre\",\r\n        titleBoostDescription: \"DÃ©finissez la valeur de mise en avant pour les propriÃ©tÃ©s du titre, afin de rendre les titres plus importants que le corps du texte lors de la recherche.\",\r\n        bodyProperties: \"PropriÃ©tÃ©s du Corps\",\r\n        bodyPropertiesDescription: \"Ajouter le nom des champs Ã  utiliser pour les propriÃ©tÃ©s du corps. Notez que ceci remplace le paramÃ¨tre de configuration, vous devez donc ajouter ici tous les champs souhaitÃ©s pour le corps du texte.\",\r\n        summaryProperties: \"PropriÃ©tÃ©s du RÃ©sumÃ©\",\r\n        summaryPropertiesDescription: \"Ajouter le nom des champs Ã  utiliser pour les propriÃ©tÃ©s du rÃ©sumÃ©. Notez que si vous ne spÃ©cifiez aucune propriÃ©tÃ© du rÃ©sumÃ©, les propriÃ©tÃ©s du corps seront utilisÃ©es Ã  la place.\",\r\n        summaryLength: \"Longueur du rÃ©sumÃ©\",\r\n        summaryLengthDescription: \"Fixe la longueur du rÃ©sumÃ© dans les rÃ©sultats. La valeur par dÃ©faut est de 300 caractÃ¨res.\",\r\n        rootNodes: \"Noeuds racine\",\r\n        rootNodesDescription: \"Avec ce rÃ©glage, vous pouvez limiter les rÃ©sultats de recherche aux descendants des noeuds sÃ©lectionnÃ©s.\",\r\n        culture: \"Culture\",\r\n        cultureDescription: \"Ceci est utilisÃ© pour dÃ©finir la culture dans laquelle la recherche est faite. Vous devriez probablement toujours la spÃ©cifier, mais cela pourrait fonctionner sans, notamment dans les sites invariants.\",\r\n        enableWildcards: \"Activer les caractÃ¨res gÃ©nÃ©riques\",\r\n        enableWildcardsDescription: \"Ceci active ou dÃ©sactive l'utilisation de caractÃ¨res gÃ©nÃ©riques (wildcards) dans les termes de recherches. Les caractÃ¨res gÃ©nÃ©riques sont ajoutÃ©s automatiquement Ã  chacun des termes.\",\r\n        fuzzyness: \"Approximation\",\r\n        fuzzynessDescription: \"L'approximation est utilisÃ©e pour faire correspondre votre terme de recherche avec des mots similaires. Cette mÃ©thode fixe le niveau d'approximation de la recherche. La valeur par dÃ©faut est 0,8. Si les caractÃ¨res gÃ©nÃ©riques sont activÃ©s, l'approximation ne sera pas utilisÃ©e.\",\r\n        allowedContentTypes: \"Types de Contenu AutorisÃ©s\",\r\n        allowedContentTypesDescription: \"Limite la recherche aux noeuds des Types de Contenu spÃ©cifiÃ©s.\",\r\n        fullTextSearchIsDisabled: \"FullTextSearch est dÃ©sactivÃ©\",\r\n        fullTextSearchIsEnabled: \"FullTextSearch est activÃ©\",\r\n        externalIndexNotFound: \"ExternalIndex n'a pas Ã©tÃ© trouvÃ©\",\r\n        enabled: \"ActivÃ©\",\r\n        defaultTitleField: \"Champ par dÃ©faut pour le Titre\",\r\n        indexingActiveKey: 'ClÃ© \"Indexation Active\"',\r\n        disallowedContentTypeAliases: \"Alias des Types de Contenu non-autorisÃ©s\",\r\n        disallowedPropertyAliases: \"Alias des propriÃ©tÃ©s non-autorisÃ©es\",\r\n        xPathsToRemove: \"XPaths Ã  supprimer du contenu\",\r\n        fullTextContentField: \"Champ du Contenu de Texte IntÃ©gral\",\r\n        fullTextPathField: \"Champ du Chemin vers le Contenu IntÃ©gral\"\r\n    }\r\n};\r\n","export default {\r\n    fullTextSearch: {\r\n        indexStatus: \"Indeksstatus\",\r\n        indexableNodes: \"Indekserbare noder\",\r\n        indexableNodesDescription: \"Det totale antall indekserbare noder, i henhold til gjeldende Full Text Search konfigurasjon\",\r\n        allIndexableNodesAreIndexed: \"Alle indekserbare noder har fulltekstinnhold i indeksen\",\r\n        indexedNodes: \"Indekserte noder\",\r\n        indexedNodesDescription: \"Det totale antall indekserte noder som kan sÃ¸kes etter av Full Text Search\",\r\n        missingNodes: \"Manglende noder\",\r\n        missingNodesDescription: \"Totalt antall manglende indekserte noder, i henhold til gjeldende Full Text Search konfigurasjon\",\r\n        couldntGetMissingNodes: \"Kunne ikke hente manglende noder\",\r\n        nodesAreMissingInIndex: \"{0} node(r) mangler fulltekstinnhold i indeksen\",\r\n        incorrectIndexedNodes: \"Feilaktig indekserte noder\",\r\n        incorrectIndexedNodesDescription: \"Det totale antall indekserte noder som ikke skal indekseres i henhold til gjeldende Full Text Search-konfigurasjon\",\r\n        couldntGetIncorrectIndexedNodes: \"Kunne ikke hente feilaktig indekserte noder\",\r\n        nodesAreIncorrectlyIndexed: \"{0} node(r) er feilaktig indeksert med fulltekstinnhold\",\r\n        reindexNodes: \"Reindekser noder\",\r\n        reindexedNodes: \"Reindekserte {0} node(r)\",\r\n        reindexing: \"Reindekserer...\",\r\n        reindex: \"Reindekser\",\r\n        reindexDescription: \"Velg om alle noder skal reindekseres\",\r\n        reindexWithDescendants: \"Reindekser med etterkommere\",\r\n        includeDescendants: \"Inkluder etterkommere\",\r\n        allNodes: \"Alle noder\",\r\n        selectNodes: \"Velg noder\",\r\n        selectNodesDescription: \"Velg nodene som skal reindekseres\",\r\n        selectedNodes: \"Valgte noder\",\r\n        description: \"Beskrivelse\",\r\n        developedBy: \"Utviklet av\",\r\n        sponsoredBy: \"Sponset av\",\r\n        status: \"Status\",\r\n        search: \"SÃ¸k\",\r\n        enterKeywordsHere: \"Skriv inn nÃ¸kkelord her\",\r\n        advancedSettings: \"Avanserte innstillinger\",\r\n        inspect: \"Inspiser\",\r\n        searchType: \"SÃ¸ketype\",\r\n        searchTypeDescription: \"Typen sÃ¸k du vil utfÃ¸re.\",\r\n        titleProperties: \"Tittelegenskaper\",\r\n        titlePropertiesDescription: \"Legger til feltnavn som brukes for tittelegenskaper. Merk at dette overstyrer innstillingene, sÃ¥ du mÃ¥ legge til alle Ã¸nskede felt for titler her.\",\r\n        titleBoost: \"Tittelboost\",\r\n        titleBoostDescription: \"Still inn boostingsverdien for tittelegenskapene for Ã¥ gjÃ¸re titler viktigere enn brÃ¸dtekst nÃ¥r du sÃ¸ker.\",\r\n        bodyProperties: \"BrÃ¸dtekstegenskaper\",\r\n        bodyPropertiesDescription: \"Legger til feltnavn som brukes for brÃ¸dtekstegenskaper. Merk at dette overstyrer innstillingene, sÃ¥ du mÃ¥ legge til alle Ã¸nskede felt for brÃ¸dtekst her.\",\r\n        summaryProperties: \"Oppsummeringsegenskaper\",\r\n        summaryPropertiesDescription: \"Legger til feltnavn som skal brukes for oppsummeringsegenskaper. Merk at hvis du ikke spesifiserer noen oppsummeringsegenskaper, vil brÃ¸dtekstegenskapene brukes i stedet.\",\r\n        summaryLength: \"Oppsummeringslengde\",\r\n        summaryLengthDescription: \"Angir sammendragets lengde i resultatene. Standardverdien er 300 tegn.\",\r\n        rootNodes: \"Hovednoder\",\r\n        rootNodesDescription: \"Med denne innstillingen kan du begrense sÃ¸keresultatene til Ã¥ vÃ¦re etterkommere av de valgte nodene.\",\r\n        culture: \"Kultur\",\r\n        cultureDescription: \"Dette brukes til Ã¥ definere hvilken kultur du skal sÃ¸ke i. Du bÃ¸r sannsynligvis alltid angi dette, men det kan fungere uten den, pÃ¥ uforanderlige nettsteder.\",\r\n        enableWildcards: \"Aktiver jokertegn\",\r\n        enableWildcardsDescription: \"Disse aktiverer eller deaktiverer bruk av jokertegn i sÃ¸keordene. Jokertegn blir automatisk lagt til hvert av sÃ¸keordene.\",\r\n        fuzzyness: \"Fuzzyness\",\r\n        fuzzynessDescription: \"Fuzzyness brukes til Ã¥ matche sÃ¸keordet ditt med lignende ord. Denne metoden angir fuzzyness-parameteren for sÃ¸ket. Standard er 0,8. Hvis jokertegn er aktivert, vil ikke fuzzyness brukes.\",\r\n        fullTextSearchIsDisabled: \"FullTextSearch er deaktivert\",\r\n        externalIndexNotFound: \"ExternalIndex ikke funnet\"\r\n    }\r\n};\r\n","export default {\r\n    fullTextSearch: {\r\n        indexStatus: \"Index status\",\r\n        indexableNodes: \"Indexeerbare nodes\",\r\n        indexableNodesDescription: \"Het totaal aantal indexeerbare nodes volgens de huidige Full Text Search configuratie\",\r\n        indexedNodes: \"GeÃ¯ndexeerde nodes\",\r\n        indexedNodesDescription: \"Het totaal aantal geÃ¯ndexeerde nodes die doorzoekbaar zijn door Full Text Search\",\r\n        missingNodes: \"Ontbrekende nodes\",\r\n        missingNodesDescription: \"Het totaal aantal ontbrekende nodes volgens de huidige Full Text Search configuratie\",\r\n        incorrectIndexedNodes: \"Foutief geÃ¯ndexeerde nodes\",\r\n        incorrectIndexedNodesDescription: \"Het totaal aantal geÃ¯ndexeerde nodes, die dat niet zouden moeten zijn, volgens de huidige Full Text Search configuratie\",\r\n        reindexNodes: \"Herindexeer nodes\",\r\n        reindexing: \"Herindexeren...\",\r\n        reindex: \"Herindexeer\",\r\n        reindexDescription: \"Selecteer of alle nodes opnieuw geÃ¯ndexeerd moeten worden\",\r\n        reindexWithDescendants: \"Herindexeren inclusief onderliggende\",\r\n        includeDescendants: \"Inclusief onderliggende\",\r\n        allNodes: \"Alle nodes\",\r\n        selectNodes: \"Selecteer nodes\",\r\n        selectNodesDescription: \"Selecteer de nodes om te herindexeren\",\r\n        selectedNodes: \"Geselecteerde nodes\",\r\n        description: \"Omschrijving\",\r\n        developedBy: \"Ontwikkeld door\",\r\n        sponsoredBy: \"Gesponsord door\"\r\n    }\r\n};\r\n"],"names":["entityAction","UMB_DOCUMENT_ROOT_ENTITY_TYPE","UMB_DOCUMENT_ENTITY_TYPE","reindex_action","UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS","manifests","reIndexNodeModal","reindexnode_element","localizations","en$1","da$1","cy$1","fr$1","nb$1","nl$1","contexts","fulltextsearch_context","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","config","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","FulltextsearchService","__request","data","pageNumber","requestBody","onInit","_host","extensionRegistry","entityActionManifests","modalManifests","localizationManifests","contextManifests","UMB_AUTH_CONTEXT","_auth","umbOpenApi","REINDEX_NODE_MODAL_TOKEN","UmbModalToken","ReindexNodeAction","UmbEntityActionBase","host","args","__privateAdd","_modalManagerContext","UMB_MODAL_MANAGER_CONTEXT","instance","__privateSet","modalContext","__privateGet","FullTextSearchDataSource","tryExecuteAndNotify","includeDescendants","nodeIds","FullTextSearchContext","UmbControllerBase","_source","_config","_indexStatus","_indexedNodes","_incorrectIndexedNodes","_missingIndexedNodes","UmbObjectState","UmbStringState","FULLTEXTSEARCH_CONTEXT_TOKEN","UmbContextToken","_fullTextSearchContext","ReindexNodeDialogElement","UmbElementMixin","LitElement","fullTextSearchContext","state","html","__decorateClass","property","customElement","en","da","cy","fr","nb","nl"],"mappings":"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"}
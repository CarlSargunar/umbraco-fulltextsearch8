{"version":3,"file":"index-DB07aDTd.js","sources":["../../Our.Umbraco.FullTextSearch.Client/src/actions/entity/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/modals/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/localization/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/context/manifest.ts","../../Our.Umbraco.FullTextSearch.Client/src/api/core/OpenAPI.ts","../../Our.Umbraco.FullTextSearch.Client/src/index.ts"],"sourcesContent":["import { UMB_DOCUMENT_ENTITY_TYPE, UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS, UMB_DOCUMENT_ROOT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\nimport { ManifestEntityAction } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst entityAction: ManifestEntityAction = {\r\n    type: 'entityAction',\r\n    kind: 'default',\r\n    alias: 'our.umbraco.fulltextsearch.reindex.action',\r\n    name: 'ReindexNode',\r\n    weight: -100,\r\n    forEntityTypes: [UMB_DOCUMENT_ROOT_ENTITY_TYPE, UMB_DOCUMENT_ENTITY_TYPE],\r\n    api: () => import('./reindex.action.ts'),\r\n    elementName: 'our-umbraco-fulltext-search-actions-entity-reindexnode',\r\n    meta: {\r\n        icon: 'icon-alarm-clock',\r\n        label: '#fullTextSearch_reindex',\r\n        repositoryAlias: UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS,\r\n    }\r\n}\r\n\r\nexport const manifests = [entityAction];\r\n","import { ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst reIndexNodeModal: ManifestModal = {\r\n    type: 'modal',\r\n    alias: 'our.umbraco.fulltextsearch.modals.reindexnode',\r\n    name: 'Reindex node',\r\n    js: () => import('./reindexnode.element.ts'),\r\n}\r\n\r\nexport const manifests = [reIndexNodeModal];\r\n","import { ManifestLocalization } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst localizations: ManifestLocalization[] = [\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.En\",\r\n        name: \"English\",\r\n        meta: {\r\n            culture: \"en\"\r\n        },\r\n        js: () => import(\"./en.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Da\",\r\n        name: \"Danish\",\r\n        meta: {\r\n            culture: \"da\"\r\n        },\r\n        js: () => import(\"./da.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Cy\",\r\n        name: \"Welsh\",\r\n        meta: {\r\n            culture: \"cy\"\r\n        },\r\n        js: () => import(\"./cy.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Fr\",\r\n        name: \"French\",\r\n        meta: {\r\n            culture: \"fr\"\r\n        },\r\n        js: () => import(\"./fr.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Nb\",\r\n        name: \"Norwegian bokmÃ¥l\",\r\n        meta: {\r\n            culture: \"nb\"\r\n        },\r\n        js: () => import(\"./nb.ts\")\r\n    },\r\n    {\r\n        type: \"localization\",\r\n        alias: \"Our.Umbraco.FullTextSearch.Localizations.Nl\",\r\n        name: \"Dutch\",\r\n        meta: {\r\n            culture: \"nl\"\r\n        },\r\n        js: () => import(\"./nl.ts\")\r\n    }\r\n]\r\n\r\nexport const manifests = localizations;\r\n","import { ManifestGlobalContext } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst contexts: Array<ManifestGlobalContext> = [\r\n    {\r\n        type: 'globalContext',\r\n        alias: 'our.umbraco.fulltextsearch.context',\r\n        name: 'Full Text Search context',\r\n        js: () => import('./fulltextsearch.context.ts')\r\n    }\r\n]\r\n\r\nexport const manifests = [...contexts];","import type { ApiRequestOptions } from './ApiRequestOptions';\r\n\r\ntype Headers = Record<string, string>;\r\ntype Middleware<T> = (value: T) => T | Promise<T>;\r\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\r\n\r\nexport class Interceptors<T> {\r\n  _fns: Middleware<T>[];\r\n\r\n  constructor() {\r\n    this._fns = [];\r\n  }\r\n\r\n  eject(fn: Middleware<T>) {\r\n    const index = this._fns.indexOf(fn);\r\n    if (index !== -1) {\r\n      this._fns = [\r\n        ...this._fns.slice(0, index),\r\n        ...this._fns.slice(index + 1),\r\n      ];\r\n    }\r\n  }\r\n\r\n  use(fn: Middleware<T>) {\r\n    this._fns = [...this._fns, fn];\r\n  }\r\n}\r\n\r\nexport type OpenAPIConfig = {\r\n\tBASE: string;\r\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\r\n\tENCODE_PATH?: ((path: string) => string) | undefined;\r\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\r\n\tPASSWORD?: string | Resolver<string> | undefined;\r\n\tTOKEN?: string | Resolver<string> | undefined;\r\n\tUSERNAME?: string | Resolver<string> | undefined;\r\n\tVERSION: string;\r\n\tWITH_CREDENTIALS: boolean;\r\n\tinterceptors: {request: Interceptors<RequestInit>;\r\n\t\tresponse: Interceptors<Response>;};\r\n};\r\n\r\nexport const OpenAPI: OpenAPIConfig = {\r\n\tBASE: '',\r\n\tCREDENTIALS: 'include',\r\n\tENCODE_PATH: undefined,\r\n\tHEADERS: undefined,\r\n\tPASSWORD: undefined,\r\n\tTOKEN: undefined,\r\n\tUSERNAME: undefined,\r\n\tVERSION: 'Latest',\r\n\tWITH_CREDENTIALS: false,\r\n\tinterceptors: {request: new Interceptors(),response: new Interceptors(),\r\n\t},\r\n};","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { manifests as entityActionManifests } from './actions/entity/manifest.ts';\r\nimport { manifests as modalManifests } from './modals/manifest.ts';\r\nimport { manifests as localizationManifests } from './localization/manifest.ts';\r\nimport { manifests as contextManifests } from './context/manifest.ts';\r\nimport { OpenAPI } from './api/index.ts';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n\r\n    // register them here. \r\n    extensionRegistry.registerMany([\r\n        ...entityActionManifests,\r\n        ...modalManifests,\r\n        ...localizationManifests,\r\n        ...contextManifests\r\n    ]);\r\n\r\n\r\n    _host.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n        const umbOpenApi = _auth.getOpenApiConfiguration();\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    });\r\n\r\n};"],"names":["entityAction","UMB_DOCUMENT_ROOT_ENTITY_TYPE","UMB_DOCUMENT_ENTITY_TYPE","UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS","manifests","reIndexNodeModal","localizations","contexts","Interceptors","fn","index","OpenAPI","onInit","_host","extensionRegistry","entityActionManifests","modalManifests","localizationManifests","contextManifests","UMB_AUTH_CONTEXT","_auth","umbOpenApi"],"mappings":"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"}